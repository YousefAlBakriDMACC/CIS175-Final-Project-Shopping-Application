CREATE TABLE IF NOT EXISTS user (
  USERID bigint(20) NOT NULL,
  ADDRESS1 varchar(255) DEFAULT NULL,
  ADDRESS2 varchar(255) DEFAULT NULL,
  CITY varchar(255) DEFAULT NULL,
  COMPANYNAME varchar(255) DEFAULT NULL,
  COUNTRY varchar(255) DEFAULT NULL,
  CREDITCARDEXPIRATIONDATE varchar(255) DEFAULT NULL,
  CREDITCARDNUMBER varchar(255) DEFAULT NULL,
  CREDITCARDTYPE varchar(255) DEFAULT NULL,
  EMAIL varchar(255) DEFAULT NULL,
  FIRSTNAME varchar(255) DEFAULT NULL,
  LASTNAME varchar(255) DEFAULT NULL,
  ST varchar(255) DEFAULT NULL,
  ZIP varchar(255) DEFAULT NULL,
  PRIMARY KEY (USERID)
);

CREATE TABLE IF NOT EXISTS product (
  PRODUCTID bigint(20) NOT NULL,
  CODE varchar(255) DEFAULT NULL,
  DESCRIPTION varchar(255) DEFAULT NULL,
  PRICE double DEFAULT NULL,
  PRIMARY KEY (PRODUCTID)
);

CREATE TABLE IF NOT EXISTS download (
  DOWNLOADID bigint(20) NOT NULL,
  DOWNLOADDATE date DEFAULT NULL,
  PRODUCTCODE varchar(255) DEFAULT NULL,
  USER_USERID bigint(20) DEFAULT NULL,
  PRIMARY KEY (DOWNLOADID),
  KEY FK_DOWNLOAD_USER_USERID (USER_USERID),
  CONSTRAINT FK_DOWNLOAD_USER_USERID FOREIGN KEY (USER_USERID) REFERENCES user (USERID)
);

CREATE TABLE IF NOT EXISTS invoice (
  INVOICENUMBER bigint(20) NOT NULL,
  INVOICEDATE date DEFAULT NULL,
  ISPROCESSED tinyint(1) DEFAULT '0',
  USER_USERID bigint(20) DEFAULT NULL,
  PRIMARY KEY (INVOICENUMBER),
  KEY FK_INVOICE_USER_USERID (USER_USERID),
  CONSTRAINT FK_INVOICE_USER_USERID FOREIGN KEY (USER_USERID) REFERENCES user (USERID)
);

CREATE TABLE IF NOT EXISTS lineitem (
  LINEITEMID bigint(20) NOT NULL,
  QUANTITY int(11) DEFAULT NULL,
  PRODUCT_PRODUCTID bigint(20) DEFAULT NULL,
  PRIMARY KEY (LINEITEMID),
  KEY FK_LINEITEM_PRODUCT_PRODUCTID (PRODUCT_PRODUCTID),
  CONSTRAINT FK_LINEITEM_PRODUCT_PRODUCTID FOREIGN KEY (PRODUCT_PRODUCTID) REFERENCES product (PRODUCTID)
);

CREATE TABLE IF NOT EXISTS invoice_lineitem (
  Invoice_INVOICENUMBER bigint(20) NOT NULL,
  lineItems_LINEITEMID bigint(20) NOT NULL,
  PRIMARY KEY (Invoice_INVOICENUMBER,lineItems_LINEITEMID),
  KEY FK_INVOICE_LINEITEM_lineItems_LINEITEMID (lineItems_LINEITEMID),
  CONSTRAINT FK_INVOICE_LINEITEM_Invoice_INVOICENUMBER FOREIGN KEY (Invoice_INVOICENUMBER) REFERENCES invoice (INVOICENUMBER),
  CONSTRAINT FK_INVOICE_LINEITEM_lineItems_LINEITEMID FOREIGN KEY (lineItems_LINEITEMID) REFERENCES lineitem (LINEITEMID)
);

CREATE TABLE IF NOT EXISTS sequence (
  SEQ_NAME varchar(50) NOT NULL,
  SEQ_COUNT decimal(38,0) DEFAULT NULL,
  PRIMARY KEY (SEQ_NAME)
);

INSERT INTO sequence 
    SELECT * FROM (VALUES ROW('SEQ_GEN', 1)) t
    WHERE NOT EXISTS (SELECT NULL from sequence);

-- The following data was originally inserted by the music.data.PopulateDatabase class that's included with the JPA version of the website

INSERT INTO Product
    SELECT * FROM (
        VALUES
        ROW('1', '8601', '86 (the band) - True Life Songs and Pictures', '14.95'),
        ROW('2', 'pf01', 'Paddlefoot - The first CD', '12.95'),
        ROW('3', 'pf02', 'Paddlefoot - The second CD', '14.95'),
        ROW('4', 'jr01', 'Joe Rut - Genuine Wood Grained Finish', '14.95')
    ) AS defaults
    WHERE NOT EXISTS (SELECT NULL FROM Product);

